* [[file:index.org][Index]]

* pDNSd
** What is pDNSd ?

pDNSd 与 DNSmasq 一样，可以提供 DNS 与缓存服务。但是 pDNSd 比 DNSmasq 更为强大，提供更多的可以自定义选项，包括：TTL，缓存，可用性检查，同时也支持 TCP 方式访问上层 DNS 服务器。

** pDNSd Configure

- 此配置来源于 [[https://cokebar.info/archives/734]]

#+BEGIN_SRC
# /etc/pdnsd.conf

global {
	perm_cache=2048;   # 缓存文件大小，单位 KB
	cache_dir="/var/cache/pdnsd";  # 缓存文件位置，保留默认
#	pid_file = /var/run/pdnsd.pid;  # pid 文件，不用管
	run_as="root";          # runas，保留默认
	server_ip = 0.0.0.0;  # 监听所有
	status_ctl = on;   # 保留 on
#	paranoid=on;       # 开启可减少 DNS 缓存中毒的情况，但是可能会降低性能
	query_method=udp_only;  # 只使用 UDP，保留默认
	min_ttl=6h;       # 最小 TTL 时间，自己酌情往上加，默认是 15 分钟
	max_ttl=1w;        # 最长 TTL 时间，默认一周
	timeout=10;        # 全局超时时间，默认 10 秒，酌情修改
	#neg_domain_pol=on; # 用到 neg domain 的话可以试试，不用就不用管
	#udpbufsize=1024;   # 默认
}
 
# 这个是 server 区域，可以定义多组，定义 pdnsd 的上游 dns
server {
	label= "chinadns";  # 为这组 server 起一个名字
	ip = 127.0.0.1;    # 填写 DNS 的 IP 地址，多个地址逗号分隔，可以换行，分号结尾
	port = 2222;     # 填写 DNS 的端口，我这里上一级是 3.4.5.6，监听的 5353
                   # 如果使用 114DNS 等公共 DNS 这里端口号应该是 53，或者删除该行也行
	timeout=4;         # 超时值，酌情修改
	uptest=none;       # 是否进行可用性检查，none=不检查，具体方法看官方文档
	interface=eth0;    # 可用性检查所用的 interface 名
	interval=10m;      # 检查频率
	purge_cache=off;   # 如果 off，pdnsd 不会主动清除缓存中过期的项目 除非缓存满了
	#edns_query=on;    # 是否使用 edns
}
# Generated by resolvconf
server {
	label=resolvconf;
	ip=10.0.1.12,10.0.1.11;
}
# End of resolvconf
#+END_SRC
